pipeline {
  agent { label 'docker' }

  environment {
    PROJECT  = 'project_id'
    REGION   = 'us-central1'
    AR_REPO  = 'apps'
    IMAGE    = "${env.REGION}-docker.pkg.dev/${env.PROJECT}/${env.AR_REPO}/${env.JOB_NAME}"
    TAG      = "${env.BRANCH_NAME}-${env.BUILD_NUMBER}"

    CHART_PATH  = 'charts/my-app'
    RELEASE     = 'my-app'
    NAMESPACE   = 'apps'
    APP_HOST    = 'app.example.com'
    STATIC_IP   = 'gke-app-ip'
  }

  stages {
    stage('Docker: Login') {
      steps {
        container('docker') {
          sh '''
          gcloud --version || true
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet
          '''
        }
      }
    }
    stage('Docker: Build and Push') {
      steps {
        container('docker') {
          sh '''
          docker build -t ${IMAGE}:${TAG} -t ${IMAGE}:latest .
          docker push ${IMAGE}:${TAG}
          docker push ${IMAGE}:latest
          '''
        }
      }
    }
    stage('Kubernetes: Setup and context') {
      steps {
        container('toolchain') {
          sh '''
          gcloud config set project ${PROJECT}
          gcloud container clusters get-credentials ci-gke --region ${REGION}
          kubectl get ns ${NAMESPACE} || kubectl create ns ${NAMESPACE}
          '''
        }
      }
    }
    stage('Helm: Deploy') {
      steps {
           container('toolchain') {
          sh '''
          helm upgrade --install ${RELEASE} ${CHART_PATH} \
            --namespace ${NAMESPACE} \
            --set image.repository=${IMAGE} \
            --set image.tag=${TAG} \
            --set ingress.enabled=true \
            --set ingress.className=gce \
            --set ingress.hosts[0].host=${APP_HOST} \
            --set ingress.hosts[0].paths[0].path=/ \
            --set ingress.annotations."kubernetes\\.io/ingress\\.global-static-ip-name"=${STATIC_IP} \
            --wait --timeout 10m
            
          '''
        }
      }
    }
  }

  post {
    success { echo "Deployed ${RELEASE} -> https://${APP_HOST}" }
  }
}
