# https://github.com/jenkinsci/helm-charts/tree/main/charts/jenkins
controller:
  # TODO: Add JCasC templating later once controller is up
  JCasC:
    enabled: false
    defaultConfig: false
    configScripts: {}

  # Stable LTS image
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: lts-jdk17
    pullPolicy: IfNotPresent

  podSecurityContext:
    fsGroup: 1000
  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000

  # TODO: Add plugins once everything is up
  installPlugins: []

  serviceAccount:
    create: false
    name: jenkins-deployer

  serviceType: ClusterIP
  serviceAnnotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default":"jenkins-backend"}'

  # Expose via GKE Ingress on your reserved static IP
  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    ingressClassName: "gce"
    hostName: "jenkins.example.com" # FQDN
    annotations:
      kubernetes.io/ingress.global-static-ip-name: "gke-jenkins-ip"
      kubernetes.io/ingress.allow-http: "true"
    tls: []


## TODO: Uncomment once cluster is up and JCaaS is enabled 
# agent:
#   podTemplates:
#     - name: docker
#       label: docker
#       serviceAccount: jenkins-deployer
#       containers:
#         - name: docker
#           image: docker:27-cli
#           ttyEnabled: true
#           command: "cat"
#           env:
#             - name: DOCKER_HOST
#               value: "tcp://localhost:2375"
#             - name: DOCKER_TLS_CERTDIR
#               value: ""
#           volumeMounts:
#             - name: docker-graph
#               mountPath: /var/lib/docker
#         - name: toolchain
#           image: google/cloud-sdk:slim
#           ttyEnabled: true
#           command: "cat"
#         - name: dind
#           image: docker:27-dind
#           securityContext:
#             privileged: true
#           ttyEnabled: true
#           args: ["--host=tcp://0.0.0.0:2375","--host=unix:///var/run/docker.sock","--storage-driver=overlay2"]
#           env:
#             - name: DOCKER_TLS_CERTDIR
#               value: ""
#           volumeMounts:
#             - name: docker-graph
#               mountPath: /var/lib/docker
#       volumes:
#         - name: docker-graph
#           emptyDir: {}
